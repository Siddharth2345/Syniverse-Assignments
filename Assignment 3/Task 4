abstract class Animal {

    String name;

    int age;

    static int count = 0;

    public Animal(String name, int age) {

        this.name = name;

        this.age = age;

        count++;

    }

    public void eat() {

        System.out.println(name + " is eating.");

    }

    public abstract void makeSound();

    public abstract void move();

}

interface Flyable {

    void fly();

}

interface Swimmable {

    void swim();

}

class Bird extends Animal implements Flyable {

    public Bird(String name, int age) {

        super(name, age);

    }

    public void makeSound() {

        System.out.println(name + " chirps!");

    }

    public void move() {

        System.out.println(name + " hops.");

    }

    public void fly() {

        System.out.println(name + " is flying.");

    }

}

class Fish extends Animal implements Swimmable {

    public Fish(String name, int age) {

        super(name, age);

    }

    public void makeSound() {

        System.out.println(name + " bubbles.");

    }

    public void move() {

        System.out.println(name + " swims.");

    }

    public void swim() {

        System.out.println(name + " is swimming fast.");

    }

}

class Duck extends Animal implements Flyable, Swimmable {

    public Duck(String name, int age) {

        super(name, age);

    }

    public void makeSound() {

        System.out.println(name + " quacks.");

    }

    public void move() {

        System.out.println(name + " waddles.");

    }

    public void fly() {

        System.out.println(name + " glides.");

    }

    public void swim() {

        System.out.println(name + " floats.");

    }

}

class Cat extends Animal {

    public Cat(String name, int age) {

        super(name, age);

    }

    public void makeSound() {

        System.out.println(name + " meows.");

    }

    public void move() {

        System.out.println(name + " walks gracefully.");

    }

}

class ZooKeeper {

    public void feedAllAnimals(Animal[] animals) {

        for (Animal a : animals) {

            a.eat();

        }

    }

    public void makeAnimalSound(Animal animal) {

        animal.makeSound();

    }

}

public class ZooMain {

    public static void main(String[] args) {

        Animal[] animals = {

            new Bird("Parrot", 2),

            new Fish("Goldfish", 1),

            new Duck("Donald", 3),

            new Cat("Whiskers", 4)

        };

        ZooKeeper keeper = new ZooKeeper();

        keeper.feedAllAnimals(animals);

        for (Animal a : animals) {

            keeper.makeAnimalSound(a);

            a.move();

        }

    }

}
 
