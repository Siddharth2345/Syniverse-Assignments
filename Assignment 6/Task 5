class Node<E> {
    E data;
    Node<E> next;
 
    Node(E data) {
        this.data = data;
        this.next = null;
    }
}
 
class MyLinkedList<E> {
    private Node<E> head;
    private int size = 0;
 
    public void add(E element) {
        Node<E> newNode = new Node<>(element);
        if (head == null) {
            head = newNode;
        } else {
            Node<E> current = head;
            while (current.next != null) current = current.next;
            current.next = newNode;
        }
        size++;
    }
 
    public E get(int index) {
        if (index < 0 || index >= size) throw new IndexOutOfBoundsException();
        Node<E> current = head;
        for (int i = 0; i < index; i++) current = current.next;
        return current.data;
    }
 
    public E remove(int index) {
        if (index < 0 || index >= size) throw new IndexOutOfBoundsException();
        Node<E> current = head;
        if (index == 0) {
            E data = head.data;
            head = head.next;
            size--;
            return data;
        }
        for (int i = 0; i < index - 1; i++) current = current.next;
        E data = current.next.data;
        current.next = current.next.next;
        size--;
        return data;
    }
 
    public int size() {
        return size;
    }

    public static void main(String[] args) {
        MyLinkedList<String> list = new MyLinkedList<>();
        list.add("A");
        list.add("B");
        list.add("C");
        System.out.println(list.get(1));
        list.remove(0);
        System.out.println(list.get(0));
        System.out.println(list.size());
    }
}
